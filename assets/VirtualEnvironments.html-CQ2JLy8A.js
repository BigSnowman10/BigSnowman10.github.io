import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as i,o}from"./app-68yZNNW9.js";const a={};function r(l,e){return o(),t("div",null,e[0]||(e[0]=[i('<h2 id="what-is" tabindex="-1"><a class="header-anchor" href="#what-is"><span>What is?</span></a></h2><p>Without this external environment, there can only be one version of every program.</p><p>That is if you want multiple versions of a program you will need a virtualized environment</p><h3 id="_10-2-why-a-virtual-environment" tabindex="-1"><a class="header-anchor" href="#_10-2-why-a-virtual-environment"><span>10.2 Why a virtual environment</span></a></h3><ul><li><p>Dependency management: Different projects may require different versions of libraries, and virtual environments can avoid version conflicts</p></li><li><p>Project isolation : Keep the general environment clean and tidy. Each project has its own environment and will not effect each other .</p></li><li><p>Easy to replicate: If you want to replicate your project on another machine or environment, a virtual environment makes this process easy because you can easily recreate an identical environment.</p></li></ul><h3 id="_10-3-several-common-python-virtual-environment-management-tools" tabindex="-1"><a class="header-anchor" href="#_10-3-several-common-python-virtual-environment-management-tools"><span>10.3 Several common Python virtual environment management tools</span></a></h3><ol><li><p><code>venv</code></p><ul><li><code>venv</code> is Python&#39;s own virtual environment tool, which has been built-in since Python 3.3</li></ul></li><li><p><code>pipenv</code></p><ul><li><code>pipenv</code> is a tool for Python development workflow that combines the functionality of <code>pip</code> and <code>venv</code></li><li>It automatically manages the project&#39;s virtual environment and uses <code>Pipfile</code> and <code>Pipfile.lock</code> to replace the traditional <code>requirements.txt</code>, which can more clearly define project dependencies</li><li>It also provides an overview of the dependency graph allowing developers to easily see the relationship between dependencies.</li></ul></li><li><p><code>conda</code></p><ul><li><code>conda</code> is an open source package, dependency, and environment manager that supports Python projects but can also be used for</li></ul></li></ol><h3 id="_10-4-create-the-virtual-environment-venv" tabindex="-1"><a class="header-anchor" href="#_10-4-create-the-virtual-environment-venv"><span>10.4 Create the virtual environment <code>venv</code></span></a></h3><ol><li><p>Create a new folder</p></li><li><p>In the new folder open <code>ConEmu</code></p></li><li><p>type the following code</p></li><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> python -m venv &quot;virtualEnvironmentName&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>a new folder should pop up within your newly created folder</p></li><li><p>check the overall environment with <code>pip list</code></p></li><li><p>activate the virtual environment with <code>virtualEnvironmentName\\Scripts\\activate</code></p></li><li><p>after activating you may try <code>pip list</code> again and there should be nothing as it is in the virtual environment</p></li><li><p>with the simple command of <code>deactivate</code> you can get out of the virtual environment</p></li></ol><h3 id="_10-5-enter-the-new-virtual-environment" tabindex="-1"><a class="header-anchor" href="#_10-5-enter-the-new-virtual-environment"><span>10.5 Enter the new virtual environment</span></a></h3><ol><li>In <code>PyCharm</code> enter the settings</li><li>Under the <code>Project</code> enter to <code>Python Interpreter</code></li><li>Click on <code>Add Interpreter </code> and then <code>Local Interpreter</code></li><li>Select a already existing Environment under <code>Python Path</code></li><li>To return to the previous environment just click on the little arrow</li></ol>',11)]))}const p=n(a,[["render",r]]),d=JSON.parse('{"path":"/Pyhon/VirtualEnvironments.html","title":"VirtualEnvironments","lang":"en-US","frontmatter":{"title":"VirtualEnvironments","icon":"blog","date":"2025-05-01T16:36:51.000Z","author":"FelixSnowman","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"What is? Without this external environment, there can only be one version of every program. That is if you want multiple versions of a program you will need a virtualized enviro...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VirtualEnvironments\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-01T16:36:51.000Z\\",\\"dateModified\\":\\"2025-05-11T10:31:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"FelixSnowman\\"}]}"],["meta",{"property":"og:url","content":"https://bigsnowman10.github.io/Pyhon/VirtualEnvironments.html"}],["meta",{"property":"og:site_name","content":"Penzberg"}],["meta",{"property":"og:title","content":"VirtualEnvironments"}],["meta",{"property":"og:description","content":"What is? Without this external environment, there can only be one version of every program. That is if you want multiple versions of a program you will need a virtualized enviro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-11T10:31:12.000Z"}],["meta",{"property":"article:author","content":"FelixSnowman"}],["meta",{"property":"article:published_time","content":"2025-05-01T16:36:51.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-11T10:31:12.000Z"}]]},"git":{"createdTime":1746959472000,"updatedTime":1746959472000,"contributors":[{"name":"BigSnowman10","username":"BigSnowman10","email":"felixbingwensun@gmail.com","commits":1,"url":"https://github.com/BigSnowman10"}],"changelog":[{"hash":"f831398a50af3310abb920f6e9ed532dc58a1ea4","time":1746959472000,"email":"felixbingwensun@gmail.com","author":"BigSnowman10","message":"Add initial documentation for Python variables, virtual environments, and comment creation"}]},"readingTime":{"minutes":1.32,"words":397},"filePathRelative":"Pyhon/VirtualEnvironments.md","excerpt":"<h2>What is?</h2>\\n<p>Without this external environment, there can only be one version of every program.</p>\\n<p>That is if you want multiple versions of a program you will need a virtualized environment</p>\\n<h3>10.2 Why a virtual environment</h3>\\n<ul>\\n<li>\\n<p>Dependency management: Different projects may require different versions of libraries, and virtual environments can avoid version conflicts</p>\\n</li>\\n<li>\\n<p>Project isolation : Keep the general environment clean and tidy. Each project has its own environment and will not effect each other .</p>\\n</li>\\n<li>\\n<p>Easy to replicate: If you want to replicate your project on another machine or environment, a virtual environment makes this process easy because you can easily recreate an identical environment.</p>\\n</li>\\n</ul>","autoDesc":true}');export{p as comp,d as data};
