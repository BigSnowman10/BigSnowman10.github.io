import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as i,o}from"./app-68yZNNW9.js";const a="/assets/image-20250525121512444-BOHQMIbg.png",r={};function p(s,e){return o(),n("div",null,e[0]||(e[0]=[i('<h2 id="introduction-of-number-types-in-python" tabindex="-1"><a class="header-anchor" href="#introduction-of-number-types-in-python"><span>Introduction of Number Types in Python</span></a></h2><h3 id="install-ipython" tabindex="-1"><a class="header-anchor" href="#install-ipython"><span>Install <code>iPython</code></span></a></h3><p>In the Python terminal install with <code>pip install ipython</code></p><p>and then start it with <code>ipython</code></p><h3 id="_1-the-principles-of-ipython" tabindex="-1"><a class="header-anchor" href="#_1-the-principles-of-ipython"><span>1. The principles of <code>iPython</code></span></a></h3><ul><li>The output is only a <code>int</code> type if all factors are <code>int</code> type and there is no division</li><li>The output is a <code>double</code> type if a single factor is double</li></ul><h3 id="but-why-ipython" tabindex="-1"><a class="header-anchor" href="#but-why-ipython"><span>But why <code>iPython</code>?</span></a></h3><p>It is Easy to use</p><p>It can simply run your code without having to make a new file</p><p>Clear</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><figure><img src="'+a+'" alt="image-20250525121512444" tabindex="0" loading="lazy"><figcaption>image-20250525121512444</figcaption></figure>',12)]))}const c=t(r,[["render",p]]),d=JSON.parse('{"path":"/Pyhon/Number-Types.html","title":"Number-Types","lang":"en-US","frontmatter":{"title":"Number-Types","icon":"blog","date":"2025-05-25T17:55:15.000Z","author":"FelixSnowman","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"Introduction of Number Types in Python Install iPython In the Python terminal install with pip install ipython and then start it with ipython 1. The principles of iPython The ou...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Number-Types\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-25T17:55:15.000Z\\",\\"dateModified\\":\\"2025-05-18T10:21:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"FelixSnowman\\"}]}"],["meta",{"property":"og:url","content":"https://bigsnowman10.github.io/Pyhon/Number-Types.html"}],["meta",{"property":"og:site_name","content":"Penzberg"}],["meta",{"property":"og:title","content":"Number-Types"}],["meta",{"property":"og:description","content":"Introduction of Number Types in Python Install iPython In the Python terminal install with pip install ipython and then start it with ipython 1. The principles of iPython The ou..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-18T10:21:30.000Z"}],["meta",{"property":"article:author","content":"FelixSnowman"}],["meta",{"property":"article:published_time","content":"2025-05-25T17:55:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-18T10:21:30.000Z"}]]},"git":{"createdTime":1747563690000,"updatedTime":1747563690000,"contributors":[{"name":"BigSnowman10","username":"BigSnowman10","email":"felixbingwensun@gmail.com","commits":1,"url":"https://github.com/BigSnowman10"}],"changelog":[{"hash":"ddf1d11811994460e6f70c2d232c0169f2177f0b","time":1747563690000,"email":"felixbingwensun@gmail.com","author":"BigSnowman10","message":"Add initial markdown file to the project"}]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"Pyhon/Number-Types.md","excerpt":"<h2>Introduction of Number Types in Python</h2>\\n<h3>Install <code>iPython</code></h3>\\n<p>In the Python terminal install with <code>pip install ipython</code></p>\\n<p>and then start it with <code>ipython</code></p>\\n<h3>1. The principles of <code>iPython</code></h3>\\n<ul>\\n<li>The output is only a <code>int</code> type if all factors are <code>int</code> type and there is no division</li>\\n<li>The output is a <code>double</code> type if a single factor is double</li>\\n</ul>","autoDesc":true}');export{c as comp,d as data};
